// This file has been autogenerated from parsing an Objective-C header file added in Xcode.using System;
using System;
using System.Drawing;
#if __UNIFIED__
using Foundation;
using UIKit;
#else
using MonoTouch.Foundation;
using MonoTouch.UIKit;
#endif
using Xamarin.Themes;

namespace ThemeSample {
	public partial class ElementThemeController : UIViewController {
		UILabel label;
		UITextField textField;
		UIButton blueButton;
		UIButton redButton;
		UIButton greenButton;
		UISlider slider;

		public ElementThemeController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			PodradioTheme.Apply (View);

			blueButton = GetButton (new RectangleF (10,120,298,57),
			                        PodradioTheme.SharedTheme.BlueButtonImage,
			                        "Normal Button");
			View.AddSubview (blueButton);

			redButton = GetButton (new RectangleF (10,190,298,57), 
			                       PodradioTheme.SharedTheme.RedButtonImage, 
			                       "Cancel Button");
			View.AddSubview (redButton);

			greenButton = GetButton (new RectangleF (10, 260, 298, 57), 
			                         PodradioTheme.SharedTheme.GreenButtonImage, 
			                         "Confirm Button");
			View.AddSubview (greenButton);


			label = new UILabel (new RectangleF (15, 40, 400, 30));
			label.TextColor = UIColor.FromRGBA (150/255f, 198 / 255f, 255 / 255f, 1f);
			label.BackgroundColor = UIColor.Clear;
			label.Font = PodradioTheme.SharedTheme.MainFont;
			label.Text = "Label";
			View.AddSubview (label);

			textField = new UITextField (new RectangleF(10, 80, 268, 30));
			textField.ShouldReturn = TextFieldShouldReturn;
			textField.Background = PodradioTheme.SharedTheme.TextFieldBackground;
			textField.BorderStyle = UITextBorderStyle.RoundedRect;
			textField.Text = "Text Input";
			View.AddSubview (textField);

			slider = new UISlider (new RectangleF (10, 330, 298, 10));
			slider.Value = 0.5f;
			View.AddSubview (slider);
		}

		UIButton GetButton(RectangleF rect, UIImage backImage, string title)
		{
			var button = new UIButton (rect);
			button.SetBackgroundImage(backImage, UIControlState.Normal);
			button.SetTitle(title, UIControlState.Normal);
			button.SetTitleShadowColor(UIColor.DarkGray, UIControlState.Normal);
			button.TitleLabel.ShadowOffset = new SizeF (1, -1);
			button.TitleLabel.Font = PodradioTheme.SharedTheme.MainFont;

			return button;
		}

		[Obsolete ("Deprecated in iOS 6.0")]
		public override void ViewDidUnload ()
		{
			base.ViewDidUnload ();

			label.Dispose ();
			label = null;

			textField.Dispose ();
			textField = null;

			blueButton.Dispose ();
			blueButton = null;

			redButton.Dispose ();
			redButton = null;

			greenButton.Dispose ();
			greenButton = null;

			slider.Dispose ();
			slider = null;
		}

		bool TextFieldShouldReturn (UITextField aTextField)
		{
			aTextField.ResignFirstResponder ();
			return true;
		}

		[Obsolete ("Deprecated in iOS6. Replace it with both GetSupportedInterfaceOrientations and PreferredInterfaceOrientationForPresentation")]
		public override bool ShouldAutorotateToInterfaceOrientation (UIInterfaceOrientation toInterfaceOrientation)
		{
			return true;
		}
	}
}
